
                              server                  client

                            +--------+              +--------+ 
                            | socket |              | socket |  
                            +--------+              +--------+
                                |                        |
                                v                        |    
                            +--------+                   |
                            |  bind  |                   |
                            +--------+                   |
                                |                        | 
                                v                        |
                            +--------+                   |
                            | listen |                   |
                            +--------+                   |
                                |                        |
                                v                        v
                            +--------+  TCP 3 time  +---------+
      (ESTABLISHED) SYN+ACK | accept |<-------------| connect | SYN, ACK (ESTABLISHED)
                            +--------+   handshake  +---------+
                                |                        |
                                v                        v
                            +--------+              +---------+
                            |  read  |<-------------|  write  |
                            +--------+              +---------+
                                
                            +--------+              +---------+
                            | write  |------------->|  read   |
                            +--------+              +---------+
                                |                        |
                                v                        v
                            +-------+                +-------+
                            | close |                | close |
                            +-------+                +-------+


+------------+     +---------------+       +------+       +----------------+       +----------------+
| user input |---->| child process | ----> | pipe | ----> | parent process | ----> |    server      |
+------------+     +---------------+       +------+       +----------------+       +----------------+
                                                                   ^                        |
                                                                   |                        |
                                                                   +------------------------+


TCP is a finite state machine, it has 11 state.


                 SYNseq=x
  SYN_SENT |------------------>|  LISTEN (listen())
  (connect)| SYNseq=y,ACK=x+1  |  
ESTABLISHED|<------------------|  SYN_RCVD
           |     ACK=y+1       |
           |------------------>|  ESTABLISHED
  write()  |                   |___________________      
           |                   |
           |  seq=x+1,ACK=y+1  |
           |------------------>|  read()
           |     ACK=x+2       |
           |<------------------|
           |                   |___________________
           | FINseq=x+2ACK=y+1 |
FIN_WAIT_1 |------------------>| CLOSE_WAIT
           |      ACK=x+3      |
FIN_WAIT_2 |<------------------| LAST_ACK
TIME_WAIT  |<------------------| (close())
           |     FINseq=y+1    |
           |------------------>|
           |      ACK=y+2      |

CLOSED --> SYN_SENT --> ESTABLISHED 
LISTEN 
SYN_RCVD CLOSE_WAIT LAST_ACK CLOSING FIN_WAIT_1 FIN_WAIT_2 TIME_WAIT

1. synchronize blocking iterative

bottleneck: disk or network I/O 

for (;;) {
    fd = accept(...);
    read(fd, buf, n);
    dosomething(buf);
    write(fd, buf, n);
    close(fd);
}


    +-----------+
    |application|
    +-----------+
          |
         +-+
         | |
         | |  System call - kernel context switch
         +-+ -------------------------------------> +-+
          |                                         | |  initiate read I/O
          |                                         +-+ ---->
          |                                          |
          |                                          |
          |                                          |
          |                                          |
          |                                          |   read response
          |          data movement from             +-+ <----
          |       kernel space to user space        | |
         +-+ <------------------------------------- +-+
         | |                                         |
         | |                                         |
         +-+                                         |
          |                                          |
          |                                          |
          |                                          |
          |                                          |

2. multiple process

for (;;) {
    fd = accept(...);
    ret = fork();
    swtich (ret) {
        case -1:
            do_err_handler();
            break;
        case 0:  // child process
            do_handler_fd(fd);
            break;
        default: // parent process
            continue;
    }
}

// need signal handling to handle zombie child process

pre-fork: process pool

3. multiple thread

void* thread_entry(void* args) {
    int fd = *(int *)args;
    do_handler_fd(fd);
}

for (;;) {
    fd = accept();
    pthread_create(..., thread_entry, &fd);
}